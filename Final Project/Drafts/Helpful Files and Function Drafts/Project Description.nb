(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     12187,        303]
NotebookOptionsPosition[     10035,        262]
NotebookOutlinePosition[     10376,        277]
CellTagsIndexPosition[     10333,        274]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Improving the Notebook Archive - Templates and Checks for Computational Essays
Computational essays are an extremely powerful method of exposition: they \
offer the ability to tell an interesting, interactive, and precise scientific \
narrative. The ideal computational essay is written to convey a scientific \
message with the audience in mind, and contains a mixture of code, text, and \
other supporting visual elements. Currently, the notebook archive \
(https://notebookarchive.org/) contains many computational essays and other \
less structured notebooks without a defined style or guidelines for their \
submission.
This aim of this project is to:
1. Develop a test framework for submissions and existing notebooks on the \
Notebook Archive. Some examples of tests that could be done include checks \
for: empty notebooks, broken links, spelling errors, profanity, correct \
notebook magnification and window size etc.
2. Create a a basic machine-readable template, allowing for additional \
automated checks to be performed on a notebook archive submission. This would \
aim to be similar in nature to the function repository template, where the \
author can receive feedback on their notebook in real-time, and ideally see \
the feedback with an inline notebook cell. Checks that could be performed on \
such a template could include: feedback for code-text ratio, missing author \
information, and suggestions against large blocks of code or text.\
\>", "Text",
 CellChangeTimes->{{3.7707508819186935`*^9, 3.7707509560700645`*^9}, {
  3.7707509915905237`*^9, 3.770751863789328*^9}, {3.7707518990379963`*^9, 
  3.7707520524238615`*^9}, {3.7707521623874636`*^9, 3.770752283537839*^9}, {
  3.7707524554558554`*^9, 3.7707524946326895`*^9}, {3.770755867560336*^9, 
  3.7707558695187054`*^9}, {3.7707559814836526`*^9, 
  3.770755982265736*^9}},ExpressionUUID->"bded8e24-4302-4a83-8cb9-\
1786f0cc4512"],

Cell["\<\
Message to riccardo:
- Check for spelling errors
- Check for profanities (depending on language?)
- Report on obsolete functions
-check for $Missing, $Failed
- Put nb at Magnification->100
- Put nb window size/position to Automatic


Notes from night of June 2019:
The big thing about the notebook archive, is that they are essentially saying \
that after you submit your notebook, it will keep working and stay on the web. 
Philosophy for the function repository is that you write first, then check \
later. It only complains after you use the check function.\
\>", "Text",
 CellChangeTimes->{{3.7708458918940916`*^9, 3.7708459914499955`*^9}, {
   3.7709796636505384`*^9, 3.770979669062402*^9}, {3.7709989998438845`*^9, 
   3.7709990209564056`*^9}, 
   3.770999732046254*^9},ExpressionUUID->"0cb0db08-e68a-4af9-806e-\
836ccade9ec7"],

Cell["\<\
Each function takes a cell, and prints returns null, error, warning
then there\[CloseCurlyQuote]s a function that takes several functions and a \
notebook, and gives each function each cell in the notebook \
\>", "Text",
 CellChangeTimes->{{3.771000502718365*^9, 3.771000544681158*^9}, {
  3.7710005783621016`*^9, 
  3.7710006146762857`*^9}},ExpressionUUID->"0cd9a5fc-aef5-4648-9ea4-\
a0a6bcbd42bd"],

Cell["\<\
notebook import takes the first cell, if there is an error or warning, it \
will print either __,__,__\
\>", "Text",
 CellChangeTimes->{{3.771000623522529*^9, 3.7710006499202547`*^9}, {
  3.771016749897727*^9, 
  3.7710167608165827`*^9}},ExpressionUUID->"31804adb-6d7d-4028-9d6b-\
843ac7921e99"],

Cell["\<\
In previewed Notebook, include a cell at the top, called ValidationBar that \
removes all the cells with errors that we added, then runs the validation \
again. There should also be a publish button
\
\>", "Text",
 CellChangeTimes->{{3.771342462375772*^9, 3.7713424959231863`*^9}, {
  3.7713426138087473`*^9, 3.771342631933363*^9}, {3.771342667189303*^9, 
  3.771342723697254*^9}},ExpressionUUID->"fecb428b-783f-49ed-a9d1-\
fff959af2162"],

Cell[CellGroupData[{

Cell["Notes From Computational Essay Discussion", "Subsection",
 CellChangeTimes->{{3.7714296786640916`*^9, 
  3.7714296942045727`*^9}},ExpressionUUID->"6272e6c6-7889-4448-8cbb-\
ebe6a1796955"],

Cell["\<\
After the introductory paragraph, stylistically it alternates between visual \
outputs and lines of text.\
\>", "Text",
 CellChangeTimes->{{3.7714296983634477`*^9, 
  3.7714297405766015`*^9}},ExpressionUUID->"a581a0d5-4164-46a1-867d-\
c9e8de02063b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notes from Computational Journal Discussion", "Subsection",
 CellChangeTimes->{{3.771532278227065*^9, 
  3.771532286418*^9}},ExpressionUUID->"b027721a-c35e-4975-a718-03fafbe88620"],

Cell["\<\
Look in notebook archive and find out why the pink boxes are there. 
Speed of publishing.
***Can outputs be regenerated???**** this is SU1PER important. If the code is \
re-ran will it actually work?
-> but then again, you might want to freeze the output cell, then if the cell \
is re-run it will generate another output cell.
\[LineSeparator]Checking Links > Are they dead? Is it on archive.org as an \
alternative?

-If there is a function that produces random output, suggest using SeedRandom

When making button for check notebooks, allow you to re-press the button \
which will remove, then re-check the notebook\
\>", "Text",
 CellChangeTimes->{{3.771532292196068*^9, 3.7715323115100946`*^9}, {
   3.7715333437400637`*^9, 3.7715333545580177`*^9}, {3.771533861578986*^9, 
   3.7715338831225667`*^9}, {3.7715342895791636`*^9, 3.771534311595064*^9}, {
   3.7715346281878643`*^9, 3.771534646753454*^9}, {3.771535055711771*^9, 
   3.771535070886736*^9}, {3.7715364905785007`*^9, 3.7715365175640993`*^9}, 
   3.771601426985321*^9},ExpressionUUID->"15b64776-d2e5-4ce3-a249-\
a0088d1fdb2d"],

Cell["\<\
Source is open, and code is able to be re-used -- Standing on the shoulders \
of giants

Output is interactive -- Especially useful for interaction\
\>", "Text",
 CellChangeTimes->{{3.7715351416902742`*^9, 
  3.771535172830035*^9}},ExpressionUUID->"4e6589a0-c81f-4190-af21-\
a5897fca047c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Structure of a paper", "Subsection",
 CellChangeTimes->{{3.771536277941761*^9, 
  3.7715362803634663`*^9}},ExpressionUUID->"3c404965-ada0-4146-af29-\
3b1062092ab1"],

Cell["\<\
Title, author, institution
Way to give feedback/reach the author  eg. Stephen has a public email address
Abstract
Sections of paper
Structured list of dependencies
References or links ->attribution vs just for academic plumage? \
\>", "Text",
 CellChangeTimes->{{3.771536285893301*^9, 3.7715363404972496`*^9}, {
  3.771536407196913*^9, 
  3.7715364601828747`*^9}},ExpressionUUID->"3cb6c972-b6f6-4504-b21a-\
b67b5a96a85b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Paper on the Blockchain", "Subsection",
 CellChangeTimes->{{3.77153889089081*^9, 
  3.7715388932450333`*^9}},ExpressionUUID->"94b3fbc4-1c9b-445c-b09d-\
540311c29d1e"],

Cell["\<\
Sites like minds.com are the kind of model. You can publish a paper, and \
(potentially) promote it using crypto. But you also can earn crypto by \
contributing, so if your paper gets a lot of citations/engagement then you \
earn crypto. 

\
\>", "Text",
 CellChangeTimes->{{3.771538899634934*^9, 3.771538967133703*^9}, {
  3.771591520442362*^9, 
  3.7715915212988005`*^9}},ExpressionUUID->"2e019e20-4394-45a8-81fa-\
156f3e5188b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Presentation", "Title",
 CellChangeTimes->{{3.771591528753743*^9, 
  3.771591530799122*^9}},ExpressionUUID->"5bbb4f4d-b880-448c-af19-\
b28e9f517e13"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"NO", " ", "INTERACTIVITY"}], ",", " ", 
    RowBox[{
     RowBox[{"shouldn", "'"}], "t", " ", "see", " ", "notebook", " ", "open", 
     " ", "in", " ", "frontend"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ValidateNotebook", "[", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ValidateNotebook", "[", "notebook", "]"}], " ", "\[Rule]", " ", 
    RowBox[{
    "Success", " ", "|", " ", "Failure", " ", 
     "\[IndentingNewLine]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7715915338389587`*^9, 3.771591571077344*^9}, {
  3.771591603418436*^9, 3.771591704263427*^9}, {3.771591804895915*^9, 
  3.771591807903781*^9}},ExpressionUUID->"1e0d92d7-a287-4df6-ab33-\
ddf9ad25dd8f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SubmitNotebook", "[", 
   RowBox[{"notebook", ",", " ", "cloudobject_"}], "]"}], " ", "\[Rule]", " ", 
  RowBox[{"CloudDeploy", "[", "notebook", "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "Also", " ", "removes", " ", "bars", " ", "errors", " ", "everything"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.7715917079951186`*^9, 3.771591739303836*^9}, {
  3.771591955813141*^9, 
  3.7715919629123287`*^9}},ExpressionUUID->"88a1d7ec-177e-433d-bceb-\
3fb5f955a297"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PreviewNotebook", "[", "notebook", "]"}], " ", "\[Rule]", " ", 
  RowBox[{"Success", " ", "|", " ", "Failure", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "This", " ", "opens", " ", "the", " ", "notebook", " ", "in", " ", "the",
       " ", "frontend"}], ","}]}]}]}]], "Input",
 CellChangeTimes->{{3.77159175000256*^9, 
  3.771591798875479*^9}},ExpressionUUID->"8c976f24-c28c-468e-8b0e-\
720d47491cb1"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7715918237476387`*^9, 3.7715918389644337`*^9}, 
   3.771621112392926*^9},ExpressionUUID->"0ce89c50-f197-4afa-aee4-\
d18b74cdc122"]
}, Open  ]]
},
WindowSize->{750, 911},
WindowMargins->{{-6, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1917, 29, 386, "Text",ExpressionUUID->"bded8e24-4302-4a83-8cb9-1786f0cc4512"],
Cell[2478, 51, 843, 20, 320, "Text",ExpressionUUID->"0cb0db08-e68a-4af9-806e-836ccade9ec7"],
Cell[3324, 73, 409, 8, 78, "Text",ExpressionUUID->"0cd9a5fc-aef5-4648-9ea4-a0a6bcbd42bd"],
Cell[3736, 83, 305, 7, 34, "Text",ExpressionUUID->"31804adb-6d7d-4028-9d6b-843ac7921e99"],
Cell[4044, 92, 448, 9, 78, "Text",ExpressionUUID->"fecb428b-783f-49ed-a9d1-fff959af2162"],
Cell[CellGroupData[{
Cell[4517, 105, 193, 3, 53, "Subsection",ExpressionUUID->"6272e6c6-7889-4448-8cbb-ebe6a1796955"],
Cell[4713, 110, 259, 6, 34, "Text",ExpressionUUID->"a581a0d5-4164-46a1-867d-c9e8de02063b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5009, 121, 186, 2, 53, "Subsection",ExpressionUUID->"b027721a-c35e-4975-a718-03fafbe88620"],
Cell[5198, 125, 1099, 21, 298, "Text",ExpressionUUID->"15b64776-d2e5-4ce3-a249-a0088d1fdb2d"],
Cell[6300, 148, 299, 8, 78, "Text",ExpressionUUID->"4e6589a0-c81f-4190-af21-a5897fca047c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6636, 161, 170, 3, 53, "Subsection",ExpressionUUID->"3c404965-ada0-4146-af29-3b1062092ab1"],
Cell[6809, 166, 431, 11, 144, "Text",ExpressionUUID->"3cb6c972-b6f6-4504-b21a-b67b5a96a85b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7277, 182, 172, 3, 53, "Subsection",ExpressionUUID->"94b3fbc4-1c9b-445c-b09d-540311c29d1e"],
Cell[7452, 187, 441, 11, 122, "Text",ExpressionUUID->"2e019e20-4394-45a8-81fa-156f3e5188b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7930, 203, 155, 3, 96, "Title",ExpressionUUID->"5bbb4f4d-b880-448c-af19-b28e9f517e13"],
Cell[8088, 208, 799, 19, 106, "Input",ExpressionUUID->"1e0d92d7-a287-4df6-ab33-ddf9ad25dd8f"],
Cell[8890, 229, 495, 12, 48, "Input",ExpressionUUID->"88a1d7ec-177e-433d-bceb-3fb5f955a297"],
Cell[9388, 243, 449, 11, 30, "Input",ExpressionUUID->"8c976f24-c28c-468e-8b0e-720d47491cb1"],
Cell[9840, 256, 179, 3, 28, "Input",ExpressionUUID->"0ce89c50-f197-4afa-aee4-d18b74cdc122"]
}, Open  ]]
}
]
*)

